name: build-images

on:
  pull_request_target:
    types: [ opened, synchronize, reopened ]

jobs:
  build-craned:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - id: git-versions
        run: |
          echo "::set-output name=git-version::$(git describe --tags --always)"
      - id: build-name-image
        run: |
          echo "::set-output name=build-name-image::craned"
      - id: build-name-file
        run: |
          echo "::set-output name=build-name-file::$(echo "${{steps.build-name-image.outputs.build-name-image}}" | tr '/' '-')"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: docker-layer-caching-${{ github.workflow }}-${{steps.build-name-file.outputs.build-name-file}}-{hash}
          restore-keys: |
            docker-layer-caching-${{ github.workflow }}-${{steps.build-name-file.outputs.build-name-file}}-

      - name: Build and export
        run: |
          make image-craned

      - name: Login to Coding Container Registry
        uses: docker/login-action@v1
        with:
          registry: zsnmwy-docker.pkg.coding.net
          username: ${{ secrets.CODING_USERNAME }}
          password: ${{ secrets.CODING_PASSWORD }}

      - name: Push image
        run: |
          IMAGE_NAME=${{steps.build-name-image.outputs.build-name-image}}
          IMAGE_ID=zsnmwy-docker.pkg.coding.net/gocrane/crane/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=${{steps.git-versions.outputs.git-version}}
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag gocrane/$IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  build-metric-adapter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - id: git-versions
        run: |
          echo "::set-output name=git-version::$(git describe --tags --always)"
      - id: build-name-image
        run: |
          echo "::set-output name=build-name-image::metric-adapter"
      - id: build-name-file
        run: |
          echo "::set-output name=build-name-file::$(echo "${{steps.build-name-image.outputs.build-name-image}}" | tr '/' '-')"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: docker-layer-caching-${{ github.workflow }}-${{steps.build-name-file.outputs.build-name-file}}-{hash}
          restore-keys: |
            docker-layer-caching-${{ github.workflow }}-${{steps.build-name-file.outputs.build-name-file}}-

      - name: Build and export
        run: |
          make image-metric-adapter

      - name: Login to Coding Container Registry
        uses: docker/login-action@v1
        with:
          registry: zsnmwy-docker.pkg.coding.net
          username: ${{ secrets.CODING_USERNAME }}
          password: ${{ secrets.CODING_PASSWORD }}

      - name: Push image
        run: |
          IMAGE_NAME=${{steps.build-name-image.outputs.build-name-image}}
          IMAGE_ID=zsnmwy-docker.pkg.coding.net/gocrane/crane/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=${{steps.git-versions.outputs.git-version}}
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag gocrane/$IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  build-crane-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - id: git-versions
        run: |
          echo "::set-output name=git-version::$(git describe --tags --always)"
      - id: build-name-image
        run: |
          echo "::set-output name=build-name-image::crane-agent"
      - id: build-name-file
        run: |
          echo "::set-output name=build-name-file::$(echo "${{steps.build-name-image.outputs.build-name-image}}" | tr '/' '-')"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: docker-layer-caching-${{ github.workflow }}-${{steps.build-name-file.outputs.build-name-file}}-{hash}
          restore-keys: |
            docker-layer-caching-${{ github.workflow }}-${{steps.build-name-file.outputs.build-name-file}}-

      - name: Build and export
        run: |
          make image-crane-agent

      - name: Login to Coding Container Registry
        uses: docker/login-action@v1
        with:
          registry: zsnmwy-docker.pkg.coding.net
          username: ${{ secrets.CODING_USERNAME }}
          password: ${{ secrets.CODING_PASSWORD }}

      - name: Push image
        run: |
          IMAGE_NAME=${{steps.build-name-image.outputs.build-name-image}}
          IMAGE_ID=zsnmwy-docker.pkg.coding.net/gocrane/crane/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=${{steps.git-versions.outputs.git-version}}
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag gocrane/$IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  build-dashboard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - id: git-versions
        run: |
          echo "::set-output name=git-version::$(git describe --tags --always)"
      - id: build-name-image
        run: |
          echo "::set-output name=build-name-image::dashboard"
      - id: build-name-file
        run: |
          echo "::set-output name=build-name-file::$(echo "${{steps.build-name-image.outputs.build-name-image}}" | tr '/' '-')"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: docker-layer-caching-${{ github.workflow }}-${{steps.build-name-file.outputs.build-name-file}}-{hash}
          restore-keys: |
            docker-layer-caching-${{ github.workflow }}-${{steps.build-name-file.outputs.build-name-file}}-

      - name: Build and export
        run: |
          make image-dashboard

      - name: Login to Coding Container Registry
        uses: docker/login-action@v1
        with:
          registry: zsnmwy-docker.pkg.coding.net
          username: ${{ secrets.CODING_USERNAME }}
          password: ${{ secrets.CODING_PASSWORD }}

      - name: Push image
        run: |
          IMAGE_NAME=${{steps.build-name-image.outputs.build-name-image}}
          IMAGE_ID=zsnmwy-docker.pkg.coding.net/gocrane/crane/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=${{steps.git-versions.outputs.git-version}}
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag gocrane/$IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  post-comment:
    runs-on: ubuntu-latest
    needs:
      - build-craned
      - build-metric-adapter
      - build-crane-agent
      - build-dashboard
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - id: git-versions
        run: |
          echo "::set-output name=git-version::$(git describe --tags --always)"
      - name: maintain-comment
        uses: actions-cool/maintain-one-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ðŸŽ‰ Successfully Build Images.
            | Image                                         | Pull Command                                              |
            | --------------------------------------------- | --------------------------------------------------------- |
            | crane-agent:${{steps.git-versions.outputs.git-version}}    | docker pull zsnmwy-docker.pkg.coding.net/gocrane/crane/crane-agent:${{steps.git-versions.outputs.git-version}}    |
            | dashboard:${{steps.git-versions.outputs.git-version}}      | docker pull zsnmwy-docker.pkg.coding.net/gocrane/crane/dashboard:${{steps.git-versions.outputs.git-version}}      |
            | metric-adapter:${{steps.git-versions.outputs.git-version}} | docker pull zsnmwy-docker.pkg.coding.net/gocrane/crane/metric-adapter:${{steps.git-versions.outputs.git-version}} |
            | craned:${{steps.git-versions.outputs.git-version}}         | docker pull zsnmwy-docker.pkg.coding.net/gocrane/crane/craned:${{steps.git-versions.outputs.git-version}}         |
            <!-- Created by actions-cool/maintain-one-comment -->
          body-include: '<!-- Created by actions-cool/maintain-one-comment -->'
